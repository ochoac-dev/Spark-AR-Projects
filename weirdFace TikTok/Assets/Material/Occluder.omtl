{
    "Pass": [
        {
            "BlendEnable": "Off",
            "BlendMode": "Normal",
            "ClearType": "Dont",
            "ColorWrite": "Off",
            "Cull": "Back",
            "DepthTestEnable": "On",
            "DepthWriteEnable": "On",
            "Frag": "f1",
            "FullScreenShading": "Off",
            "PassType": "Normal",
            "UseCameraRT": "Off",
            "UseFBOFetch": "Off",
            "UseFBOTexture": "Off",
            "Vert": "v1",
            "ZTest": "LessEqual"
        }
    ],
    "Shader": "Occluder"
}
---ENDJSON

---BEGIN f1
precision highp float;
void main() { gl_FragColor = vec4(1.0, 1.0, 1.0, 1.0); }
---END f1

---BEGIN v1
precision highp float;
attribute vec3 attPosition;
attribute vec2 attTexcoord0;

#ifdef AMAZING_USE_BONES
attribute vec4 attBoneIds;
attribute vec4 attWeights;
const int MAX_BONES = 50;
uniform mat4 u_Palatte[MAX_BONES];
#endif

uniform mat4 u_MVP;

void main() {
  vec4 homogeneous_pos = vec4(attPosition, 1.0);

#ifdef AMAZING_USE_BONES
  mat4 boneTransform = u_Palatte[int(attBoneIds.x)] * attWeights.x;
  boneTransform += u_Palatte[int(attBoneIds.y)] * attWeights.y;
  boneTransform += u_Palatte[int(attBoneIds.z)] * attWeights.z;
  boneTransform += u_Palatte[int(attBoneIds.w)] * attWeights.w;
  gl_Position = u_MVP * boneTransform * homogeneous_pos;
#else
  gl_Position = u_MVP * homogeneous_pos;
#endif
}
---END v1
